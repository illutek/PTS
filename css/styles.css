/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box;
  overflow-x: hidden;
  background-color: #f7f7f2; }

p {
  margin-bottom: 1.5rem; }

a:hover {
  text-decoration: none; }

img {
  width: 100%;
  height: auto;
  display: block; }

ol {
  display: block;
  list-style-type: decimal;
  margin-top: 1em;
  margin-bottom: 1em;
  margin-left: 0;
  margin-right: 0;
  padding-left: 40px;
  overflow: hidden; }

ul {
  list-style-type: circle;
  overflow: hidden; }

li {
  margin-left: 3.5rem; }

html {
  font-family: "Raleway", sans-serif; }

body {
  font-size: 1.6rem;
  line-height: 1.5; }

h1, h2, h3, h4 {
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px; }

h1 {
  font-size: 4rem;
  margin-bottom: 3rem; }
  @media screen and (min-width: 62.5em) {
    h1 {
      font-size: 3vw; } }

h2 {
  font-size: calc(1.6rem + .9rem);
  margin-bottom: 3rem; }

h3 {
  font-size: calc(1.6rem + .4rem);
  margin-bottom: 1rem; }

strong {
  font-weight: 700; }

.container {
  width: 90vw;
  max-width: 102.4rem;
  margin: 0 auto; }

.r-menu-overlay {
  right: -100vw;
  opacity: 0;
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  overflow: auto;
  z-index: 99;
  color: #f7f7f2;
  background: rgba(143, 148, 145, 0.95);
  transition: all 0.9s;
  display: grid;
  grid-template-columns: 5rem 1fr 5rem;
  grid-template-rows: 1fr 8fr 1fr;
  grid-template-areas: ". btn ." ". list ." ". social ."; }
  @media screen and (min-width: 62.5em) {
    .r-menu-overlay {
      display: none; } }
  .r-menu-overlay__close {
    grid-area: btn;
    justify-self: end;
    padding-top: 3rem; }
    .r-menu-overlay__close-btn {
      width: 3rem;
      height: 3rem;
      margin-top: 4rem;
      cursor: pointer; }
  .r-menu-overlay__list {
    grid-area: list;
    align-self: center;
    justify-self: center;
    text-align: center; }
    .r-menu-overlay__list .c-main-menu__items {
      display: flex;
      flex-direction: column; }
    .r-menu-overlay__list .c-main-menu__item {
      margin-left: 0;
      font-size: 3rem;
      line-height: 6rem; }
      .r-menu-overlay__list .c-main-menu__item:not(:last-child) {
        padding-right: 0; }
    .r-menu-overlay__list .c-main-menu__link {
      line-height: 4rem;
      color: #f7f7f2; }
  .r-menu-overlay__social {
    grid-area: social;
    justify-self: end; }
  .r-menu-overlay--visible {
    opacity: 1;
    right: 0; }

.r-overlay-contact {
  left: -100vw;
  opacity: 0;
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  overflow: auto;
  z-index: 99;
  color: #f7f7f2;
  background: rgba(143, 148, 145, 0.95);
  transition: all 0.9s; }
  .r-overlay-contact__inner {
    display: flex;
    flex-direction: column;
    width: 80vw;
    margin: 0 auto; }
  .r-overlay-contact__close {
    padding-top: 5rem;
    height: 15rem; }
  .r-overlay-contact__logo {
    width: 60%;
    margin: 0 auto 6rem; }
  .r-overlay-contact__slogan {
    text-align: center;
    padding-top: 2rem; }
  .r-overlay-contact__body {
    width: 80%;
    align-self: center;
    margin-bottom: 6rem; }
  .r-overlay-contact--visible {
    opacity: 1;
    left: 0; }
  .r-overlay-contact__social {
    align-self: flex-end;
    padding-right: 3rem; }

.r-top-header {
  background-color: #e8492f;
  padding: 0 1rem;
  height: 6rem;
  color: #f7f7f2;
  font-size: 2.4rem;
  margin-bottom: 6rem;
  display: flex;
  align-items: center;
  justify-content: space-between; }

.r-header {
  margin-bottom: 6rem;
  display: flex;
  justify-content: space-between; }
  @media screen and (min-width: 62.5em) {
    .r-header__contact--mobile {
      display: none; } }
  .r-header__logo {
    display: flex;
    flex-direction: column;
    align-items: center; }
    .r-header__logo-img {
      width: 45vw;
      max-width: 19rem;
      height: auto; }
  .r-header__slogan {
    font-weight: 600;
    font-size: 2rem;
    color: #8f9491;
    margin-top: 2rem; }
  .r-header__menu {
    display: none;
    padding-top: 2rem; }
    @media screen and (min-width: 62.5em) {
      .r-header__menu {
        display: block; } }
    @media screen and (min-width: 62.5em) {
      .r-header__menu--mobile {
        display: none; } }

.trailers {
  margin-bottom: 3rem;
  display: flex;
  flex-direction: column; }
  @media screen and (min-width: 37.5em) {
    .trailers {
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-evenly; } }

.r-info {
  color: #f7f7f2;
  margin-bottom: 3rem;
  display: flex;
  flex-direction: column; }
  @media screen and (min-width: 37.5em) {
    .r-info {
      flex-direction: row; } }
  .r-info__news {
    background-color: #e8492f;
    padding: 2rem; }
    @media screen and (min-width: 37.5em) {
      .r-info__news {
        width: 50vw; } }
    @media screen and (min-width: 62.5em) {
      .r-info__news--desktop {
        margin-left: 10vw; } }
  .r-info__aboutus {
    background-color: #8f9491;
    padding: 2rem; }
    @media screen and (min-width: 37.5em) {
      .r-info__aboutus {
        width: 50vw; } }
    @media screen and (min-width: 62.5em) {
      .r-info__aboutus--desktop {
        margin-right: 10vw; } }

.r-highlghted-parts {
  margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .r-highlghted-parts {
      display: grid;
      grid-template-columns: 2fr 1fr;
      grid-gap: 2rem; } }

@media screen and (min-width: 37.5em) {
  .r-highlighted {
    display: flex;
    align-items: center;
    border: 1px solid #e1e6e1;
    padding: 2rem; } }

.r-parts__inner {
  position: relative;
  background-color: #e1e6e1;
  padding: 4rem;
  margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .r-parts__inner {
      margin-bottom: 0; } }

.page-content {
  padding: 3rem 0; }

.footer {
  background-color: #8f9491;
  color: #f7f7f2;
  padding: 2rem 0; }
  @media screen and (min-width: 37.5em) {
    .footer__inner {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem; } }
  .footer__left {
    padding: 2rem 0;
    margin-bottom: 3rem;
    border-bottom: 1px #f7f7f2 solid; }
    @media screen and (min-width: 37.5em) {
      .footer__left {
        padding-right: 1rem;
        border-bottom: none;
        border-right: 1px solid #f7f7f2;
        margin-bottom: 0; } }
  .footer__right {
    padding: 2rem 0;
    display: flex;
    flex-direction: column; }
    .footer__right-bottom {
      padding: 2rem 0;
      align-self: flex-end; }

.r-footer-bottom {
  padding: 2rem 0;
  background-color: #e8492f;
  color: #f7f7f2; }
  .r-footer-bottom__inner {
    display: flex;
    flex-direction: column;
    justify-content: center; }
  .r-footer-bottom__copy {
    margin-bottom: 3rem; }

.c-language__items {
  list-style: none;
  display: flex; }
  .c-language__items .is-active {
    border-bottom: 1px solid #f7f7f2;
    color: #f7f7f2; }

.c-language__item {
  margin-left: 0; }
  .c-language__item:not(:last-child) {
    padding-right: 1.6rem; }

.language-link {
  text-decoration: none;
  color: #f7f7f2; }

.c-hamburger-btn {
  height: 4rem;
  width: 4rem;
  border: 1px solid #8f9491;
  text-align: center;
  transition: all 1.2s;
  cursor: pointer; }
  .c-hamburger-btn--open {
    position: relative;
    top: -7px;
    transform: translateY(2.5rem);
    width: 2rem; }
    .c-hamburger-btn--open, .c-hamburger-btn--open::before, .c-hamburger-btn--open::after {
      height: 1px;
      background-color: #8f9491;
      display: inline-block;
      transition: all 0.3s; }
    .c-hamburger-btn--open::before, .c-hamburger-btn--open::after {
      content: "";
      position: absolute;
      left: 0; }
    .c-hamburger-btn--open::before {
      top: -0.6rem;
      width: 2rem; }
    .c-hamburger-btn--open::after {
      top: 0.6rem;
      width: 2rem; }

.c-menu-overlay__items {
  list-style: none; }

.c-menu-overlay__item {
  margin-left: 0;
  font-size: 4rem;
  line-height: 6rem; }

.c-menu-overlay__link {
  text-decoration: none;
  line-height: 4rem;
  color: #f7f7f2; }

.c-main-menu__items {
  list-style: none;
  display: flex;
  justify-content: space-evenly;
  flex-wrap: nowrap; }

.c-main-menu__item {
  margin-left: 0;
  margin-bottom: 2rem;
  font-size: 2rem; }
  .c-main-menu__item:not(:last-child) {
    padding-right: 1.5rem; }
  .c-main-menu__item .is-active {
    border-bottom: 1px solid #0a100d;
    color: #0a100d; }

.c-main-menu__link {
  text-decoration: none;
  color: #0a100d; }
  .c-main-menu__link:hover {
    border-bottom: 1px solid #0a100d; }

.c-close-btn {
  position: relative;
  width: 0; }
  .c-close-btn, .c-close-btn::before, .c-close-btn::after {
    height: 1px;
    background-color: #f7f7f2;
    display: inline-block;
    transition: all 0.3s; }
  .c-close-btn::before, .c-close-btn::after {
    content: "";
    position: absolute;
    left: 0; }
  .c-close-btn::before {
    transform: rotate(135deg);
    top: 1rem;
    width: 3rem; }
  .c-close-btn::after {
    transform: rotate(-135deg);
    top: 1rem;
    width: 3rem; }

.c-phone--mobile {
  border: 1px solid #f7f7f2;
  padding: 1rem; }
  @media screen and (min-width: 37.5em) {
    .c-phone--mobile {
      display: none; } }

.c-phone-link {
  text-decoration: none;
  color: #f7f7f2; }

.c-phone--desktop {
  display: none;
  font-size: 1.6rem; }
  .c-phone--desktop p {
    margin-bottom: 0; }
  @media screen and (min-width: 37.5em) {
    .c-phone--desktop {
      display: block; } }

.c-social-icon {
  width: 4.2rem; }

.node-link {
  color: #f7f7f2;
  text-decoration: none; }

.c-readmore .c-readmore__link {
  margin-left: 0;
  display: inline-block; }
  .c-readmore .c-readmore__link a {
    text-decoration: none; }
  .c-readmore .c-readmore__link:hover::after {
    width: 100%;
    transition: width .3s; }

.c-readmore--white .c-readmore__link::after {
  content: '';
  display: block;
  width: 0;
  height: 1px;
  transition: width .3s;
  background: #f7f7f2; }

.c-readmore--white .c-readmore__link a {
  color: #f7f7f2; }

.c-readmore--black .c-readmore__link::after {
  content: '';
  display: block;
  width: 0;
  height: 1px;
  transition: width .3s;
  background: #0a100d; }

.c-readmore--black .c-readmore__link a {
  color: #0a100d; }

.c-email__link {
  color: #f7f7f2; }

.c-image {
  margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .c-image {
      width: 45%;
      max-width: 37.5rem; }
      .c-image--left {
        float: left;
        margin-right: 2rem; }
      .c-image--right {
        float: right;
        margin-left: 2rem; } }

.c-footer-menu__items {
  list-style: none;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column; }
  @media screen and (min-width: 37.5em) {
    .c-footer-menu__items {
      flex-direction: row; } }

.c-footer-menu__item {
  margin-left: 0;
  font-size: 1rem; }
  @media screen and (min-width: 37.5em) {
    .c-footer-menu__item:not(:first-child) {
      padding-left: 1.5rem; } }
  .c-footer-menu__item:not(:last-child) {
    padding-right: 1.5rem;
    position: relative; }
    @media screen and (min-width: 37.5em) {
      .c-footer-menu__item:not(:last-child)::after {
        content: "";
        display: block;
        background-color: #f7f7f2;
        height: 18px;
        width: 1px;
        right: 0;
        top: 0;
        position: absolute;
        bottom: 0; } }
  .c-footer-menu__item .is-active {
    border-bottom: 1px solid #e1e6e1;
    color: #f7f7f2; }

.c-footer-menu__link {
  text-decoration: none;
  color: #f7f7f2; }
  .c-footer-menu__link:hover {
    color: #8f9491; }

.c-email-protecting a:link, .c-email-protecting a:visited, .c-email-protecting a:active {
  color: #f7f7f2; }

.c-email-protecting a:hover {
  text-decoration: none; }

.c-more-details__img {
  width: 2rem;
  height: 2rem;
  margin-left: 1rem; }

.n-trailer-full__body {
  margin-bottom: 3rem; }

.trailer-models {
  display: flex;
  justify-content: space-evenly;
  flex-direction: column; }
  @media screen and (min-width: 37.5em) {
    .trailer-models {
      flex-direction: row; } }
  @media screen and (min-width: 37.5em) {
    .trailer-models--view {
      flex-wrap: wrap; } }
  @media screen and (min-width: 37.5em) {
    .trailer-models__views-row {
      margin: 1rem;
      width: 31%; } }

.trailer-model {
  position: relative;
  margin-bottom: 3rem; }
  .trailer-model:hover .trailer-model__caption {
    top: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; }
  .trailer-model:hover .trailer-model__caption--gray {
    background-color: #8f9491; }
  .trailer-model:hover .trailer-model__caption--accent {
    background-color: #e8492f; }
  .trailer-model:hover .trailer-model__label {
    margin-bottom: 2rem; }
  .trailer-model__extra-info, .trailer-model__moredetails {
    display: none;
    text-align: center; }
  .trailer-model:hover .trailer-model__extra-info {
    display: block; }
  .trailer-model:hover .trailer-model__moredetails {
    display: block; }
  @media screen and (min-width: 37.5em) {
    .trailer-model {
      flex-grow: 1;
      max-width: 95%; } }
  .trailer-model__caption {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 1rem 2rem;
    transition: all 0.9s; }
    .trailer-model__caption--gray {
      background-color: rgba(143, 148, 145, 0.7); }
    .trailer-model__caption--accent {
      background-color: rgba(232, 73, 47, 0.8); }
  .trailer-model__moredetails-field {
    margin-top: 2rem;
    display: flex; }

.para-subtrailer {
  padding: 2rem;
  border: 2px solid #e1e6e1; }
  .para-subtrailer__item:not(:last-child) {
    margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .para-subtrailer__images-items {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      flex-wrap: wrap;
      padding: 2rem 0; } }
  .para-subtrailer__images-item:not(:last-child) {
    margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .para-subtrailer__images-item {
      max-width: 30%;
      margin: 1rem; }
      .para-subtrailer__images-item:not(:last-child) {
        margin-bottom: 0; } }

.n-aboutus-full__content {
  display: flex;
  flex-direction: column;
  padding-bottom: 3rem;
  margin-bottom: 6rem;
  border-bottom: 1px rgba(225, 230, 225, 0.4) solid;
  width: 100%; }
  @media screen and (min-width: 37.5em) {
    .n-aboutus-full__content {
      display: inline-block; } }

.n-aboutus-full__body {
  order: 0; }

.n-aboutus-full__img {
  order: 1; }

.para-t-img-l__wrap {
  display: flex;
  flex-direction: column;
  padding-bottom: 3rem;
  margin-bottom: 6rem;
  border-bottom: 1px rgba(225, 230, 225, 0.4) solid;
  width: 100%; }
  @media screen and (min-width: 37.5em) {
    .para-t-img-l__wrap {
      display: inline-block; } }

.para-t-img-l__img-field {
  order: 2; }

.para-t-img-l .para__text-field {
  order: 1; }

.para-t-img-r__wrap {
  display: flex;
  flex-direction: column;
  padding-bottom: 3rem;
  margin-bottom: 6rem;
  border-bottom: 1px rgba(225, 230, 225, 0.4) solid;
  width: 100%; }
  @media screen and (min-width: 37.5em) {
    .para-t-img-r__wrap {
      display: inline-block; } }

.n-parts-teaser {
  color: #0a100d; }

.n-parts-full__content-wrap {
  margin-bottom: 3rem; }

.paragraph-video {
  margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .paragraph-video__items {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      flex-wrap: wrap;
      padding: 2rem 0; } }
  .paragraph-video__item {
    margin-bottom: 3rem; }
    @media screen and (min-width: 37.5em) {
      .paragraph-video__item {
        width: 47%;
        height: auto;
        margin: 1rem; } }

.paragraph-photos {
  margin-bottom: 3rem; }
  @media screen and (min-width: 37.5em) {
    .paragraph-photos__items {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      flex-wrap: wrap;
      padding: 2rem 0; } }
  .paragraph-photos__item {
    margin-bottom: 3rem; }
    @media screen and (min-width: 37.5em) {
      .paragraph-photos__item {
        width: 47%;
        height: auto;
        margin: 1rem; } }

.n-more-trailers {
  background-color: #e8492f;
  margin-bottom: 3rem;
  padding: 1.5rem 0;
  font-size: 2rem; }
  .n-more-trailers__content {
    text-align: center; }
    .n-more-trailers__content a {
      color: #f7f7f2;
      text-decoration: none; }
    .n-more-trailers__content p {
      margin-bottom: 0; }

.n-short-message {
  background-color: #e1e6e1;
  padding: 4rem;
  margin-bottom: 3rem; }
  .n-short-message__content {
    color: #0a100d; }

.n-secondhand__inner {
  display: flex;
  flex-direction: column; }
  @media screen and (min-width: 37.5em) {
    .n-secondhand__inner {
      flex-direction: row; } }

.n-secondhand__body {
  order: 1; }
  @media screen and (min-width: 37.5em) {
    .n-secondhand__body {
      margin-left: 3rem;
      flex: 1;
      order: 2; } }

.n-secondhand__images {
  order: 2; }
  @media screen and (min-width: 37.5em) {
    .n-secondhand__images {
      flex: 1;
      order: 1; } }

.n-secondhand__field-items {
  display: flex;
  flex-direction: column; }
  @media screen and (min-width: 62.5em) {
    .n-secondhand__field-items {
      flex-direction: row; } }

.n-secondhand__field-item:not(:last-child) {
  margin-bottom: 3rem; }

@media screen and (min-width: 62.5em) {
  .n-secondhand__field-item:not(:last-child) {
    margin-right: 3rem; } }

.n-secondhand__views-row:not(:last-child) {
  margin-bottom: 3rem;
  border-bottom: 1px solid #8f9491;
  padding-bottom: 3rem; }

.u-flex-content {
  display: flex; }
  .u-flex-content--center {
    justify-content: center; }
  .u-flex-content--right {
    justify-content: right; }

.u-list-item-right {
  float: right; }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> develop
